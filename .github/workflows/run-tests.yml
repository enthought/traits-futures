name: Run test suite for PySide2 and wxPython

on:
  pull_request

jobs:
  tests-pyside2:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.6, 3.9]

    env:
      ETS_TOOLKIT: qt

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Install Linux packages for Qt 5 support
      run: |
        sudo apt-get update
        sudo apt-get install qt5-default
        sudo apt-get install libxkbcommon-x11-0
        sudo apt-get install libxcb-icccm4
        sudo apt-get install libxcb-image0
        sudo apt-get install libxcb-keysyms1
        sudo apt-get install libxcb-randr0
        sudo apt-get install libxcb-render-util0
        sudo apt-get install libxcb-xinerama0
      if: runner.os == 'Linux'
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and local packages
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install .[pyside2]
    - name: Run the test suite
      uses: GabrielBB/xvfb-action@v1
      with:
        working-directory: ${{ runner.temp }}
        run: python -X faulthandler -m unittest discover -v traits_futures

  tests-wx:
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-latest]
        python-version: [3.8]

    env:
      ETS_TOOLKIT: wx

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Install Linux packages for wx support
      run: |
        sudo apt-get update
        sudo apt-get install libsdl2-2.0-0
      if: runner.os == 'Linux'
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and local packages
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install .
    - name: Install wxPython (not Linux)
      run: |
        python -m pip install wxPython
      if: runner.os != 'Linux'
    - name: Install wxPython (Ubuntu 20.04)
      run: |
        python -m pip install -f https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-20.04 wxPython
      if: matrix.os == 'ubuntu-20.04'
    - name: Run the test suite
      uses: GabrielBB/xvfb-action@v1
      with:
        working-directory: ${{ runner.temp }}
        run: python -X faulthandler -m unittest discover -v traits_futures
